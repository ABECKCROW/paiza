/**
 * あなたは異世界に転生した勇者です。この世界にはレベルという概念があり、戦闘を起こした際、レベルが高い方が勝利となります。勝利した側は相手のレベルの半分 (小数点以下切り捨て) だけレベルが上昇し、敗北した側はレベルが半分 (小数点以下切り捨て) になります。またレベルが同じ場合戦闘は引き分けとなり、レベルの変動は起きません。
 *
 * 例えばあなたのレベルが 20 で、戦闘相手のレベルが 11 のとき、あなたの勝利となります。戦闘後、あなたのレベルは 5 上昇し 25 に、相手のレベルは 5 になります。
 *
 * あなたはこの世界でのレベルの変化をシミュレーションしようと考えています。
 * 戦闘を始める前のあなたのレベルと、N 回の戦闘で戦う相手のレベルが順に与えられるので、N 回の戦闘後にあなたのレベルがいくつになったかを出力してください。
 *
 * 入力例 1 では以下の表のようにレベルが遷移します。
 *
 * 初めのあなたのレベルは 10 で、5 人と戦闘します。
 * 1 人目と 2 人目、それぞれとの戦闘はあなたの勝利で、それぞれの戦闘でレベルが 2, 5 上昇します。
 * 3 人目との戦闘時点でのあなたのレベルは 17 なので、レベル が 20 である相手に敗北してレベルが 8 に変化します。
 * 4 人目との戦闘は引き分けでレベルの変化は生じません。
 * 最後に 5 人目との戦闘に勝利し、レベルが 3 上昇してレベル 11 となります。
 * 図1
 *
 * 評価ポイント
 * 10回のテストケースで、正答率、実行速度、メモリ消費量をはかり得点が決まります。
 * より早い解答時間で提出したほうが得点が高くなります。
 * 複数のテストケースで正しい出力がされるか評価（+50点）
 * 解答までの速さ評価（+50点）
 * 入力される値
 * 入力は以下のフォーマットで与えられます。
 *
 * N L
 * x_1
 * x_2
 * ...
 * x_N
 * ・1 行目に戦闘回数の N と、最初のあなたのレベル L が与えられます。
 * ・続く N 行の各行には i 番目 (1 ≦ i ≦ N) の戦闘相手のレベルが x_i であるという情報が与えられます。
 * ・入力は合計で N+1 行からなり、入力値最終行の末尾に改行が 1 つ入ります。
 *
 * それぞれの値は文字列で標準入力から渡されます。標準入力からの値取得方法はこちらをご確認ください
 * 期待する出力
 * N 回の戦闘後のあなたのレベルを出力してください。
 * 期待する出力は 1 行からなります。
 * 整数で出力してください。
 * 末尾に改行を入れ、余計な文字、空行を含んではいけません。
 * 条件
 * すべてのテストケースにおいて、以下の条件をみたします。
 *
 * ・1 ≦ N ≦ 100,000
 * ・1 ≦ L ≦ 10,000
 * ・1 ≦ x_i ≦ 10,000 (1 ≦ i ≦ N)
 */



const lines = ["5 10", "5", "11", "20", "8", "7"]; //正解: 11
// const lines = ["3 9", "10", "4", "4"]; //正解: 4

const battleSimulation = () => {
    const myLevel = Number(lines[0].split(" ")[1]);
    const enemy = lines.slice(1);
    let newMyLevel = myLevel;
    for (let i = 0; i < enemy.length; i++) {
        const drow = newMyLevel === Number(enemy[i]);
        const win = newMyLevel > Number(enemy[i]);
        if (!drow) {
            if (win) {
                newMyLevel = newMyLevel + Number(Math.floor(enemy[i] / 2));
            } else {
                newMyLevel = Math.floor(newMyLevel / 2);
            }
        }
    }
    console.log(newMyLevel);
};

//出力結果が同じなら正解。
battleSimulation();
/**
 * 今は月末。そろそろ今月の家計簿をつけないといけません。 あなたの手元には、とあるスーパーマーケットのレシートの山があります。
 *
 * スーパーマーケットにはポイントカードが導入されていて、買い物をするたびに購入金額に応じたポイントがたまります。 加算されるポイントは次の 3 つのルールに従って決定されます。
 *
 * 1. 通常は購入金額の 1 ％（小数点以下切り捨て）とする
 * 2. ただし、3 のつく日は購入金額の 3 ％（小数点以下切り捨て）とする
 * 3. ただし、5 のつく日は購入金額の 5 ％（小数点以下切り捨て）とする
 *
 * あなたはポイントカードに、今、何ポイントたまっているのかが気になりました。 レシートの数が多いので、手で計算するのは大変です。
 *
 * 早速、これを計算するプログラムを書きましょう。 ただし、今月のはじめには全くポイントがたまっておらず（0 ポイント）、また、今月中ポイントは消費されなかったものとします。
 * 評価ポイント
 * 10回のテストケースで、正答率、実行速度、メモリ消費量をはかり得点が決まります。
 * より早い回答時間で提出したほうが得点が高くなります。
 * 複数のテストケースで正しい出力がされるか評価（+50点）
 * 解答までの速さ評価（+50点）
 * 入力される値
 * 入力は以下のフォーマットで与えられます。
 *
 * N　　　　#各レシートの数
 * d_1 p_1　#1枚目のレシートの日付 d_1 日, 購入金額 p_1 円
 * d_2 p_2　#2枚目のレシートの日付 d_2 日, 購入金額 p_2 円
 * ...
 * d_N p_N　#N枚目のレシートの日付 d_N 日, 購入金額 p_N 円
 * 1行目には今月分のレシートの枚数を表す整数 N が入力されます。続く N 行には各レシートの情報が入力されます。
 * すなわち、d_i p_i は i 枚目のレシートが発行された日付が d_i 日であり、このときの購入金額が p_i 円であることを表します。
 *
 * それぞれの値は文字列で標準入力から渡されます。標準入力からの値取得方法はこちらをご確認ください
 * 期待する出力
 * 今月末にポイントカードにたまっているポイントの値を１行に出力してください。
 *
 * 最後は改行し、余計な文字、空行を含んではいけません。
 * 条件
 * すべてのテストケースで以下の条件を満たします。
 *
 * ・ 1 ≦ N ≦ 1000 (レシートの数)
 * ・ 1 ≦ d_i ≦ 31 (i番目のレシートが発行された日付)
 * ・ 1 ≦ p_i ≦ 10000 (i番目のレシートの購入金額)
 */


const lines1 = ["3", "1 1024", "11 2048", "21 4196"];
const lines2 = ["1", "30 340"];
const lines3 = ["2", "5 10000", "12 10000"];

const pointCard = (lines) => {
    const num = lines[0];
    let point = [];
    for (let i = 1; i <= num; i++) {
        const [d, p] = lines[i].split(" ");
        switch (d) {
            case "3":
            case "13":
            case "23":
            case "30":
            case "31":
                point.push(Math.trunc(Number(p) * 0.03));
                break;
            case "5":
            case "15":
            case "25":
                point.push(Math.trunc(Number(p) * 0.05));
                break;
            default:
                point.push(Math.trunc(Number(p) * 0.01));
        }
    }
    return point.reduce((acc, num) => acc + num, 0);
};

console.log(pointCard(lines1));
console.log(pointCard(lines2));
console.log(pointCard(lines3));


//不正解の原因
//case "3" || "13" || "23" || "30" || "31":
//    for (let i = 1; i <= 3; i++) {